########################
###   Key bindings   ###
########################

# color
set -g default-terminal "tmux-256color-italic"

# Useful for debugging
# After used, it will be necessary to restart tmux from scratch
#unbind-key -a
set -g prefix 'C-\' #'


# Mouse options
#set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set -g mouse on
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

# Set command history
set -g history-limit 100000

# C-b is not acceptable -- Emacs uses it
# set-option -g prefix 'C-\' #'
bind-key C-z last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable. 
# setw -g aggressive-resize on 

## Manage sessions and windows

# set window split
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
# kill panes
bind-key x run "exec ~/.dotfiles/scripts/kill-tmux-pane.sh"

# Create/delete new windows
bind-key w command-prompt -p "Name of new window: " "new-window -c '#{pane_current_path}' -n '%%'"
bind-key  X command-prompt -p "Close windows #{current_window} [Y/n]?" "run-shell \"exec ~/.dotfiles/scripts/kill-tmux-windows.sh '%%' \""

# Create sessions
bind-key S command-prompt -p "Name of new session: " "new-session -A -c $HOME -s '%%'"

# List all sessions
bind-key L choose-session
bind-key A command-prompt -p "Session to attach: " "attach-session -t '%%'"

# set pane resize
bind -r C-k   resize-pane -D
bind -r C-i   resize-pane -U
bind -r C-j   resize-pane -L
bind -r C-l   resize-pane -R

# Use arrows to move around panes
bind -r down  select-pane -D
bind -r up    select-pane -U
bind -r right select-pane -R
bind -r left  select-pane -L

# Use arrows to move around panes
bind -r k    select-pane -D
bind -r i    select-pane -U
bind -r l    select-pane -R
bind -r j    select-pane -L

# Use tab to scroll windows
bind -r tab next
bind -r S-tab next # not working!

# display panes number
bind q display-pane

# switch layout
bind -r space next-layout

# rotate windows
bind -r r rotate-window

# Emacs copypaste mode
set-window-option -g mode-keys emacs

# reload config
bind C-r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# status bar
#set-option -g status-utf8 on

bind [ copy-mode

# copy & paste
# Copy tmux buffer to X clipboard
# run -b runs a shell command in background
# bind C-w run -b "tmux show-buffer | xclip -selection clipboard -i"
bind C-w run -b "tmux show-buffer | xclip -i"
# Paste from X clipboard into tmux; also replace newline characters with
# space characters when pasting
bind C-y run -b "exec </dev/null; xclip -o | awk 1 ORS=' ' | tmux load-buffer - ; tmux paste-buffer"
# Same as `C-y' binding except that the newline chars are not replaced with space
bind Y run -b "exec </dev/null; xclip -o | tmux load-buffer - ; tmux paste-buffer"


# allow zooming a pane with <prefix> +
bind-key + resize-pane -Z

# Use <prefix>-D to detach
bind-key D detach

# open emacs in a new window or a new pane
bind-key e new-window -c '#{pane_current_path}' -n "emacs" "emacsclient -nw ."
bind-key C-e split-window -c '#{pane_current_path}' -h "emacsclient -nw ."

# open ssh connections through keybind
bind-key C-s  command-prompt -p "host" "split-window -h 'ssh %1'"
bind-key s    command-prompt -p "host" "new-window -n %1 'ssh %1'"


########################
###       Theme      ###
########################

set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour4 #colour244 #base0
set-window-option -g window-status-bg colour235
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour12 #12 #cyan
set-window-option -g window-status-current-bg colour235
set-window-option -g window-status-current-attr bright
set-window-option -g window-status-fg colour12 #default

# pane border
set-option -g pane-border-style 'fg=#af0000' #base02
set-option -g pane-active-border-style 'fg=#00ffff,bg=colour160,bold'

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

set -g status-interval 1
set -g status-justify centre # center align window list

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Powerline settings
set-option -g status on
set-option -g status-interval 2
#set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.dotfiles/tmux/tmux-powerline/status-left-main.sh)"
set-option -g status-right "#(~/.dotfiles/tmux/tmux-powerline/status-right.sh)"


# Nested tmux
unbind C-b
set -g prefix 'C-\' #'

bind -n M-F11 \
    set -qg status-bg colour235 \; \
    set-window-option -g window-status-fg colour235 \; \
    set-window-option -g window-status-bg colour235 \; \
    set-window-option -g window-status-attr dim \; \
    set-window-option -g window-status-current-fg colour21 \; \
    set-window-option -g window-status-current-bg colour235 \; \
    set-window-option -g window-status-current-attr dim \; \
    set-window-option -g window-status-fg colour21 \; \
    set-option -g status-left "#(~/.dotfiles/tmux/tmux-powerline/status-left-secondary.sh)"
    
bind -n M-F12 \
    set -qg status-bg colour235 \; \
    set-window-option -g window-status-fg colour4 \; \
    set-window-option -g window-status-bg colour235 \; \
    set-window-option -g window-status-attr dim   \; \
    set-window-option -g window-status-current-fg colour12 \; \
    set-window-option -g window-status-current-bg colour235  \; \
    set-window-option -g window-status-current-attr bright \; \
    set-window-option -g window-status-fg colour12 \; \
    set-option -g status-left "#(~/.dotfiles/tmux/tmux-powerline/status-left-main.sh)"
    

bind -n S-up \
    send-keys M-F12 \; \
    set -qg status-bg colour235 \; \
    set-window-option -g window-status-fg colour235 \; \
    set-window-option -g window-status-bg colour235 \; \
    set-window-option -g window-status-attr dim \; \
    set-window-option -g window-status-current-fg colour21 \; \
    set-window-option -g window-status-current-bg colour235 \; \
    set-window-option -g window-status-current-attr dim \; \
    set-window-option -g window-status-fg colour21 \; \
    set-option -g prefix 'C-!' \; \
    set-option -g status-left "#(~/.dotfiles/tmux/tmux-powerline/status-left-secondary.sh)"



bind -n S-down \
    send-keys M-F11 \; \
    set -qg status-bg colour235 \; \
    set-window-option -g window-status-fg colour4 \; \
    set-window-option -g window-status-bg colour235 \; \
    set-window-option -g window-status-attr dim   \; \
    set-window-option -g window-status-current-fg colour12 \; \
    set-window-option -g window-status-current-bg colour235  \; \
    set-window-option -g window-status-current-attr bright \; \
    set-window-option -g window-status-fg colour12 \; \
    set-option -g status-left "#(~/.dotfiles/tmux/tmux-powerline/status-left-main.sh)" \; \
    set-option -qg prefix 'C-\' #'






########################
###      Credits     ###
########################
# http://alvinalexander.com/linux-unix/tmux-cheat-sheet-commands-pdf
# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#
# To copyt between tmux and emacs:
# http://emacs.stackexchange.com/questions/7191/copy-and-paste-to-system-clipboard-in-tmux
#
# To copy through mouse selection:
# https://wiki.archlinux.org/index.php/tmux#Urxvt_middle_click
