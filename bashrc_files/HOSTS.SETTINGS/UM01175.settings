#!/usr/bin/env bash 

echo -n "Loading settings for host UM01175.."

# PS1 color
export good="$(tput setaf 247)"

DIRNAME="$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1

add_to_path "$DIRNAME/UM01175.bin"

alias t-scs-prd='ssh -4 -vNC -D 0.0.0.0:5007 -o ServerAliveInterval=60 scs-prd'

function check_if_env_active(){
    if [[ -f /tmp/set-env ]]; then
        active_env=`cat /tmp/set-env`
        echo ">>>>> $1 -- $active_env"
        if [[ "$1" == "$active_env" ]]; then
            echo "Activate"
            return 1
        fi
        echo "ENV: $active_env already active!" 
        return 0
    fi
    return 1
}

function set-dev-env(){
    check_if_env_active dev && return
    source $DIRNAME/UM01175.resources/workspace/env-login dev
    echo "dev" > /tmp/set-env
}

function set-int-env(){
    check_if_env_active int && return
    source $DIRNAME/UM01175.resources/workspace/env-login int
    echo "int" > /tmp/set-env
}

function set-ikube-env(){
    check_if_env_active ikube && return
    source $DIRNAME/UM01175.resources/workspace/env-login ikube
    echo "ikube" > /tmp/set-env
}

function set-prd-env(){
    check_if_env_active prd && return
    source $DIRNAME/UM01175.resources/workspace/env-login prd
    echo "prd" > /tmp/set-env
}

function unset-env(){
    if ! check_if_env_active > /dev/null; then
        echo "No active env!"
        return
    fi  
    source $DIRNAME/UM01175.resources/workspace/env-logout && \
        echo "logout from `cat /tmp/set-env` env" && \
        rm -f /tmp/set-env > /dev/null
}

alias pks-nps='pks network-profiles'
alias pks-cls='pks clusters'
alias pks-np='pks network-profile'
alias pks-cl='pks cluster'

function nsxtc () {
    if [[ "$1" != "GET" && "$1" != "POST" && "$1" != "DELETE" ]]; then
        echo "First argument must be a CRUD keyword!"
        return 
    fi
    curl -X "$1" -sN -k -x 127.0.0.1:13128 -u "${user}:${password}" "$baseApiUri/api/v1/${*:2}"
}


echo "Done"


